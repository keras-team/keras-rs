name: Tests

on:
  push:
  pull_request:
  workflow_call:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  run_tests:
    name: Test the code
    strategy:
      fail-fast: false
      matrix:
        backend: [tensorflow, jax, torch]
    runs-on: ubuntu-latest
    env:
      KERAS_BACKEND: ${{ matrix.backend }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -m pip install --upgrade pip setuptools
        echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
    - name: pip cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
          pip install -r requirements.txt --progress-bar off
          pip install --no-deps -e "." --progress-bar off
    - name: Test with pytest
      run: |
        pytest keras_rs/
  check_format:
    name: Check the code format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Get pip cache dir
        id: pip-cache
        run: |
          python -m pip install --upgrade pip setuptools
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: pip cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install -r requirements.txt --progress-bar off
          pip install --no-deps -e "." --progress-bar off
      - name: Install pre-commit
        run: pip install pre-commit && pre-commit install
      - name: Run pre-commit
        run: pre-commit run --all-files --hook-stage manual
